{"remainingRequest":"/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/babel-loader/lib/index.js!/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/jqwidgets-scripts/jqwidgets-vue/vue_jqxform.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/jqwidgets-scripts/jqwidgets-vue/vue_jqxform.vue","mtime":499162500000},{"path":"/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tangyin/PersonalSpace/projects/demoAboutJQWidgets/demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\nimport \"../jqwidgets/jqxcore.js\";\nimport \"../jqwidgets/jqxdata.js\";\nimport \"../jqwidgets/jqxinput.js\";\nimport \"../jqwidgets/jqxpasswordinput.js\";\nimport \"../jqwidgets/jqxnumberinput.js\";\nimport \"../jqwidgets/jqxradiobutton.js\";\nimport \"../jqwidgets/jqxcheckbox.js\";\nimport \"../jqwidgets/jqxbuttons.js\";\nimport \"../jqwidgets/jqxscrollbar.js\";\nimport \"../jqwidgets/jqxlistbox.js\";\nimport \"../jqwidgets/jqxdropdownlist.js\";\nimport \"../jqwidgets/jqxcombobox.js\";\nimport \"../jqwidgets/jqxmaskedinput.js\";\nimport \"../jqwidgets/globalization/globalize.js\";\nimport \"../jqwidgets/jqxcalendar.js\";\nimport \"../jqwidgets/jqxdatetimeinput.js\";\nimport \"../jqwidgets/jqxform.js\";\nexport default {\n  props: {\n    padding: Object,\n    backgroundColor: String,\n    borderColor: String,\n    value: Object,\n    template: Array,\n    autoCreate: {\n      default: true,\n      type: Boolean\n    }\n  },\n  created: function created() {\n    this.id = 'jqxForm' + JQXLite.generateID();\n    this.componentSelector = '#' + this.id;\n  },\n  mounted: function mounted() {\n    if (this.autoCreate) this.__createComponent__();\n  },\n  methods: {\n    createComponent: function createComponent(options) {\n      if (!this.autoCreate) this.__createComponent__(options);else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n    },\n    setOptions: function setOptions(options) {\n      JQXLite(this.componentSelector).jqxForm(options);\n    },\n    getOptions: function getOptions() {\n      var usedProps = Object.keys(this.__manageProps__());\n      var resultToReturn = {};\n\n      for (var i = 0; i < usedProps.length; i++) {\n        resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxForm(usedProps[i]);\n      }\n\n      return resultToReturn;\n    },\n    getInstance: function getInstance() {\n      return JQXLite(this.componentSelector).jqxForm('getInstance');\n    },\n    refresh: function refresh() {\n      JQXLite(this.componentSelector).jqxForm('refresh');\n    },\n    destroy: function destroy() {\n      JQXLite(this.componentSelector).jqxForm('destroy');\n    },\n    hideComponent: function hideComponent(name) {\n      JQXLite(this.componentSelector).jqxForm('hideComponent', name);\n    },\n    showComponent: function showComponent(name) {\n      JQXLite(this.componentSelector).jqxForm('showComponent', name);\n    },\n    val: function val(value) {\n      if (value !== undefined) {\n        JQXLite(this.componentSelector).jqxForm('val', value);\n      } else {\n        return JQXLite(this.componentSelector).jqxForm('val');\n      }\n    },\n    submit: function submit(action, target, method) {\n      return JQXLite(this.componentSelector).jqxForm('submit', action, target, method);\n    },\n    getComponentByName: function getComponentByName(name) {\n      return JQXLite(this.componentSelector).jqxForm('getComponentByName', name);\n    },\n    _padding: function _padding(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxForm('padding', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxForm('padding');\n      }\n    },\n    _backgroundColor: function _backgroundColor(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxForm('backgroundColor', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxForm('backgroundColor');\n      }\n    },\n    _borderColor: function _borderColor(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxForm('borderColor', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxForm('borderColor');\n      }\n    },\n    _value: function _value(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxForm('value', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxForm('value');\n      }\n    },\n    _template: function _template(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxForm('template', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxForm('template');\n      }\n    },\n    __createComponent__: function __createComponent__(options) {\n      var widgetOptions;\n      options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n      JQXLite(this.componentSelector).jqxForm(widgetOptions);\n\n      this.__extendProps__();\n\n      this.__wireEvents__();\n    },\n    __manageProps__: function __manageProps__() {\n      var widgetProps = ['padding', 'backgroundColor', 'borderColor', 'value', 'template'];\n      var componentProps = this.$options.propsData;\n      var options = {};\n\n      for (var prop in componentProps) {\n        if (widgetProps.indexOf(prop) !== -1) {\n          options[prop] = componentProps[prop];\n        }\n      }\n\n      return options;\n    },\n    __extendProps__: function __extendProps__() {\n      var that = this;\n      Object.defineProperty(that, 'padding', {\n        get: function get() {\n          return that._padding();\n        },\n        set: function set(newValue) {\n          that._padding(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'backgroundColor', {\n        get: function get() {\n          return that._backgroundColor();\n        },\n        set: function set(newValue) {\n          that._backgroundColor(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'borderColor', {\n        get: function get() {\n          return that._borderColor();\n        },\n        set: function set(newValue) {\n          that._borderColor(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'value', {\n        get: function get() {\n          return that._value();\n        },\n        set: function set(newValue) {\n          that._value(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'template', {\n        get: function get() {\n          return that._template();\n        },\n        set: function set(newValue) {\n          that._template(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n    },\n    __wireEvents__: function __wireEvents__() {\n      var that = this;\n      JQXLite(this.componentSelector).on('formDataChange', function (event) {\n        that.$emit('formDataChange', event);\n      });\n      JQXLite(this.componentSelector).on('buttonClick', function (event) {\n        that.$emit('buttonClick', event);\n      });\n    }\n  }\n};",{"version":3,"sources":["vue_jqxform.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxdata.js';\n    import '../jqwidgets/jqxinput.js';\n    import '../jqwidgets/jqxpasswordinput.js';\n    import '../jqwidgets/jqxnumberinput.js';\n    import '../jqwidgets/jqxradiobutton.js';\n    import '../jqwidgets/jqxcheckbox.js';\n    import '../jqwidgets/jqxbuttons.js';\n    import '../jqwidgets/jqxscrollbar.js';\n    import '../jqwidgets/jqxlistbox.js';\n    import '../jqwidgets/jqxdropdownlist.js';\n    import '../jqwidgets/jqxcombobox.js';\n    import '../jqwidgets/jqxmaskedinput.js';\n    import '../jqwidgets/globalization/globalize.js'\n    import '../jqwidgets/jqxcalendar.js';\n    import '../jqwidgets/jqxdatetimeinput.js';\n    import '../jqwidgets/jqxform.js';\n\n    export default {\n        props: {\n            padding: Object,\n            backgroundColor: String,\n            borderColor: String,\n            value: Object,\n            template: Array,\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxForm' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxForm(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxForm(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            getInstance: function() {\n                return JQXLite(this.componentSelector).jqxForm('getInstance');  \n            },\n            refresh: function() {\n                JQXLite(this.componentSelector).jqxForm('refresh');  \n            },\n            destroy: function() {\n                JQXLite(this.componentSelector).jqxForm('destroy');  \n            },\n            hideComponent: function(name) {\n                JQXLite(this.componentSelector).jqxForm('hideComponent', name);  \n            },\n            showComponent: function(name) {\n                JQXLite(this.componentSelector).jqxForm('showComponent', name);  \n            },\n            val: function(value) {\n                if (value !== undefined) {\n                    JQXLite(this.componentSelector).jqxForm('val',  value)\n                } else {\n                    return JQXLite(this.componentSelector).jqxForm('val');\n                }\n            },\n            submit: function(action, target, method) {\n                return JQXLite(this.componentSelector).jqxForm('submit', action, target, method);  \n            },\n            getComponentByName: function(name) {\n                return JQXLite(this.componentSelector).jqxForm('getComponentByName', name);  \n            },\n            _padding: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxForm('padding', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxForm('padding');\n                }\n            },\n            _backgroundColor: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxForm('backgroundColor', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxForm('backgroundColor');\n                }\n            },\n            _borderColor: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxForm('borderColor', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxForm('borderColor');\n                }\n            },\n            _value: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxForm('value', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxForm('value');\n                }\n            },\n            _template: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxForm('template', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxForm('template');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxForm(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['padding','backgroundColor','borderColor','value','template'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'padding', {\n                    get: function() {\n                        return that._padding();\n                    },\n                    set: function(newValue) {\n                        that._padding(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'backgroundColor', {\n                    get: function() {\n                        return that._backgroundColor();\n                    },\n                    set: function(newValue) {\n                        that._backgroundColor(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'borderColor', {\n                    get: function() {\n                        return that._borderColor();\n                    },\n                    set: function(newValue) {\n                        that._borderColor(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'value', {\n                    get: function() {\n                        return that._value();\n                    },\n                    set: function(newValue) {\n                        that._value(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'template', {\n                    get: function() {\n                        return that._template();\n                    },\n                    set: function(newValue) {\n                        that._template(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n                JQXLite(this.componentSelector).on('formDataChange', function (event) { that.$emit('formDataChange', event); });\n                JQXLite(this.componentSelector).on('buttonClick', function (event) { that.$emit('buttonClick', event); });\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue"}]}